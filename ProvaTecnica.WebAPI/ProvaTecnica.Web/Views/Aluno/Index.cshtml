
            @model PagedList.IPagedList<ProvaTecnica.Web.Models.Aluno>
            @using PagedList.Mvc;
            @using PagedList;
            <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


            <br />
            <div class="container row p-0 m-0">
                <div class="col-9">
                    <h2 class="text-info">Alunos</h2>
                </div>
                <div class="col-3">
                    <a asp-action="Create" class="btn btn-info form-control text-white">Novo Aluno</a>
                </div>
            </div>

            <br />

            @using (Html.BeginForm())
            {
                <p>
                    Nome do Aluno: @Html.TextBox("nomeAluno")
                    <input type="submit" value="Pesquisar" />
                </p>
            }

            <br />

            <div class="col-12 border p-3 mt-3">
                <form method="post">
                    <table class="table table-striped border">
                        <tr class="table-secondary">
                            <th>
                                @Html.DisplayName("Id Turma")
                            </th>
                            <th>
                                @Html.DisplayName("Turma")
                            </th>
                            <th>
                                @Html.DisplayName("Aluno")
                            </th>
                            <th>
                                @Html.DisplayName("Nota")
                            </th>
                            <th></th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Turma.IdTurma)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Turma.NomeTurma)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NomeAluno)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NotaAluno)
                                </td>
                                <td>
                                    <div class="form-group row">
                                        <div class="col-3">
                                            <a asp-action="Edit" asp-route-id="@item.IdAluno" class="btn btn-success form-control text-white">Editar</a>
                                        </div>
                                        <div class="col-3">
                                            <a asp-action="Details" asp-route-id="@item.IdAluno" class="btn btn-primary form-control text-white">Detalhes</a>
                                        </div>
                                        <div class="col-3">
                                            <a asp-action="Delete" asp-route-id="@item.IdAluno" class="btn btn-danger form-control text-white">Excluir</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </table>
                </form>
            </div>

            <br />
            <div>
                Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                de @Model.PageCount

                @if (Model.HasPreviousPage)
                {
                    @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    @Html.Raw(" ");
                    @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                }
                else
                {
                    @:<<
                    @Html.Raw(" ");
                    @:< Anterior
                }

                @if (Model.HasNextPage)
                {
                    @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    @Html.Raw(" ");
                    @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                }
                else
                {
                    @:Próxima >
                    @Html.Raw(" ")
                    @:>>
                }
            </div>